<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zjgt.p2p.dao.AgreementMapper" >
  <resultMap id="BaseResultMap" type="com.zjgt.p2p.model.Agreement" >
    <!--
          common class -  @ET
      model 属性定义, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="agreementno" property="agreementno" jdbcType="VARCHAR" />
    <result column="agreementname" property="agreementname" jdbcType="VARCHAR" />
    <result column="subject" property="subject" jdbcType="VARCHAR" />
    <result column="fileurl" property="fileurl" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
          common class -  @ET
      model 属性定义, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
          common class -  @ET
      model 属性定义, do not modify.
    -->
    id, agreementno, agreementname, subject, fileurl, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zjgt.p2p.model.AgreementExample" >
    <!--
          common class -  @ET
      model 属性定义, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from agreement
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
          common class -  @ET
      model 属性定义, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from agreement
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
          common class -  @ET
      model 属性定义, do not modify.
    -->
    delete from agreement
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zjgt.p2p.model.Agreement" >
    <!--
          common class -  @ET
      model 属性定义, do not modify.
    -->
    insert into agreement (id, agreementno, agreementname, 
      subject, fileurl, remark
      )
    values (#{id,jdbcType=INTEGER}, #{agreementno,jdbcType=VARCHAR}, #{agreementname,jdbcType=VARCHAR}, 
      #{subject,jdbcType=VARCHAR}, #{fileurl,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zjgt.p2p.model.Agreement" >
    <!--
          common class -  @ET
      model 属性定义, do not modify.
    -->
    insert into agreement
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="agreementno != null" >
        agreementno,
      </if>
      <if test="agreementname != null" >
        agreementname,
      </if>
      <if test="subject != null" >
        subject,
      </if>
      <if test="fileurl != null" >
        fileurl,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="agreementno != null" >
        #{agreementno,jdbcType=VARCHAR},
      </if>
      <if test="agreementname != null" >
        #{agreementname,jdbcType=VARCHAR},
      </if>
      <if test="subject != null" >
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="fileurl != null" >
        #{fileurl,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zjgt.p2p.model.Agreement" >
    <!--
          common class -  @ET
      model 属性定义, do not modify.
    -->
    update agreement
    <set >
      <if test="agreementno != null" >
        agreementno = #{agreementno,jdbcType=VARCHAR},
      </if>
      <if test="agreementname != null" >
        agreementname = #{agreementname,jdbcType=VARCHAR},
      </if>
      <if test="subject != null" >
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="fileurl != null" >
        fileurl = #{fileurl,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zjgt.p2p.model.Agreement" >
    <!--
          common class -  @ET
      model 属性定义, do not modify.
    -->
    update agreement
    set agreementno = #{agreementno,jdbcType=VARCHAR},
      agreementname = #{agreementname,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      fileurl = #{fileurl,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>